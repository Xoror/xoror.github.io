{"version":3,"file":"static/js/289.3b2052cf.chunk.js","mappings":"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","sources":["components/SpellCard.js","components/ActionCard.js","components/DiceRollButton.js","features/actions/ActionsTable.js","features/actions/ActionsAdd.js","features/actions/SpellList.js","features/actions/ActionsBox.js","../node_modules/react-fast-compare/index.js","../node_modules/@popperjs/core/lib/modifiers/applyStyles.js","../node_modules/@popperjs/core/lib/popper.js","../node_modules/react-popper/lib/esm/utils.js","../node_modules/react-popper/lib/esm/usePopper.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./SpellCard.scss\"\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\n\r\n/*\r\n    Required Inputs: \r\n    - A string as \"id\", which should uniquely identify any given certain card\r\n    - The details of the spell can be inserted with either\r\n        - a JSON object as \"data\" containing\r\n            - A string as \"name\", which is what the spell is called\r\n            - A string as \"castingTime\", which is the time it takes to cast the spell\r\n            - A boolean as \"ritual\", which specifies if the spell can be cast as a ritual\r\n            - A string as \"range\", which gives the range up to which the spell can be cast\r\n            - A string as \"duration\", which specifies how long the spell is active (instantenous in case it's a shoot and forget like\r\n              firebolt)\r\n            - A string as \"type\", which specifies the spell tier (it goes Cantrip, 1st, ..., 9th in DnD 5e)\r\n            - An object as \"description\", which takes two different forms for either:\r\n                - If the type is \"Cantrip\", the description should be an array of arrays of strings, where only the first\r\n                  array counts (the rest can be empty arrays, 1 is enough). The first array will have two entries: the first is the description\r\n                  and the second is the change of effects at higher levels, written out as a sentence.\r\n                - If the type is tier 1 or higher, the description is an array of strings, the first entry being the description and the second\r\n                  the change of effects at higher levels, written out as a sentence.\r\n            - A string gas \"school\", which specifies the spell school that the spell is from\r\n            - An array of strigns as \"classes\", which contains all the classes that can learn the spell\r\n            - An array of strings as \"components\", which describe the components needed to cast the spell, as in Vocal (\"V\"), Soamtic (\"S\"), Material (\"M\")\r\n        or each data point as its own variable, with the same restrictions and labels as above\r\n            \r\n    Optional Inputs\r\n    - A string as \"show\", which can be used to show/hide the vard via a CSS class   \r\n*/\r\n\r\nexport const SpellCard = (props) => {\r\n    let data\r\n    if(props.data === undefined) {\r\n        data = {\r\n            name: props.name, \r\n            range: props.range, \r\n            type: props.type, \r\n            description: props.description,\r\n            school: props.school, \r\n            ritual: props.ritual, \r\n            classes: props.classes, \r\n            components: props.components,\r\n            duration: props.duration, \r\n            castingTime: props.castingTime\r\n        }\r\n    }\r\n    else {\r\n        data = props.data\r\n    }\r\n    let classes = \"\"\r\n    for(let i=0; i<data.classes.length; i++) {\r\n        if(i === data.classes.length - 1) {\r\n            classes += `${data.classes[i].name}`\r\n        } else {\r\n            classes += `${data.classes[i].name}, `\r\n        }\r\n    }\r\n    let components = \"\"\r\n    for(let i=0; i<data.components.length; i++) {\r\n        if(i === data.components.length - 1) {\r\n            components += `${data.components[i]}`\r\n        } else {\r\n            components += `${data.components[i]}, `\r\n        }\r\n    }\r\n    return(\r\n        <div key={props.id} className={`${props.show} spellcard`}>\r\n            <h4>{data.name}{false ? <CloseButton variant=\"white\" style={{float:\"right\", width:\"0.5em\", height:\"0.5em\", margin:\"0.25em\"}}/>:null}</h4>\r\n            {props.offCanvas ? <h6> Classes: {classes} </h6> : null}\r\n            <Row className=\"spellcard-row\">\r\n                <Col>\r\n                    Casting Time: \r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    {data.castingTime} {data.ritual ? \" or Ritual\": \"\"}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"spellcard-row\">\r\n                <Col>\r\n                    Range: \r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    {data.range}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"spellcard-row\">\r\n                <Col>\r\n                    Components: \r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    {components}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"spellcard-row\">\r\n                <Col>\r\n                    Duration: \r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    {data.duration[0]} {data.duration[1] ? \"(Concentration)\" : null}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"spellcard-section overflow\">\r\n                {data.description[0].map((desc, index) => (\r\n                    <p key={`${data.name}-spellcard-description-${index}`} style={{paddingRight:\"0.5em\", textAlign:\"justify\"}}>{desc}</p>\r\n                ))}\r\n                <p style={{paddingRight:\"0.5em\", textAlign:\"justify\"}}> <b>At higher levels: </b> {data.description[1]}</p>\r\n                </Col>\r\n            </Row>\r\n            <section>\r\n                <p className=\"spellcard-footer\">{data.type} level {data.school} spell</p>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n<div className=\"collapse\" >\r\n    <TbArrowBigRightFilled color=\"black\" size=\"24px\" style={{position:\"absolute\", zIndex:\"3\"}}/>\r\n</div>\r\n*/","import React from \"react\";\r\n\r\nimport \"./ActionCard.scss\"\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n/*\r\n    Required Inputs: \r\n    - A string as \"id\", which should uniquely identify any given certain card\r\n    - The details of the action can be inserted with either\r\n        - a JSON object as \"data\" containing\r\n            - A string as \"name\", which is what the action is called\r\n            - A string as \"type\", which is the action type (aka in DnD 5e Action/Bonus Action/Reaction/Special)\r\n            - A string as \"range\", which is the range of the action\r\n            - A string as \"damage\", which is the amount of damage an action does (ideally use \"-\" or \"none\" if it doesn't do any damage)\r\n            - A string as \"damageType\" or left undefined, which is the type of damage an action does. WIll not be shown if it is either \"None\" or undefined\r\n            - A string as \"scaling\", which is the attribute which the damage of the action scales with\r\n            - A string or array of strings as \"description\", which is a description of what the action is or does\r\n            - A boolean as \"isProficient\" or left undefined, which determines if the character is proficient in the action. If undefined, the footer will be left empty\r\n        or each data point as its own variable, with the same restrictions and labels as above\r\n            \r\n    Optional Inputs\r\n    - A string as \"show\", which can be used to show/hide the vard via a CSS class   \r\n*/\r\n\r\nexport const ActionCard = (props) => {\r\n    let data\r\n    if(props.data != undefined) {\r\n        data = props.data\r\n    }\r\n    else {\r\n        data = {\r\n            name: props.name,\r\n            type: props.type,\r\n            range: props.range,\r\n            damage: props.damage,\r\n            damageType: props.damageType,\r\n            scaling: props.scaling,\r\n            description: props.description,\r\n            isProficient: props.isProficient\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Card key={`${props.id}`} className={`${props.show} actioncard`}>\r\n            <h4>{data.name}</h4>\r\n            <Row className=\"actioncard-row\">\r\n                <Col>\r\n                    <span>Action Type: </span>\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    {data.type}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"actioncard-row\">\r\n                <Col>\r\n                    <span>Range: </span>\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    {data.range}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"actioncard-row\">\r\n                <Col>\r\n                    <span>Damage: </span>\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    {data.damage} { data.damageType != undefined && data.damageType != \"None\" ? \"(\" + data.damageType + \")\" : null}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"actioncard-row\">\r\n                <Col>\r\n                    <span>Scales with: </span>\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    {data.scaling}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"actioncard-section overflow\">\r\n                    <p>{data.description}</p>\r\n                </Col>\r\n            </Row>\r\n            <section>\r\n                <p className=\"actioncard-footer\"> {data.isProficient != undefined ? (data.isProficient ? \"Is proficient.\" : \"Is not proficient.\") : null}</p>\r\n            </section>\r\n        </Card>\r\n    )\r\n}\r\n\r\n/*\r\n<div className=\"collapse\" >\r\n    <TbArrowBigRightFilled color=\"black\" size=\"24px\" style={{position:\"absolute\", zIndex:\"3\"}}/>\r\n</div>\r\n*/","import React, { useEffect, useMemo, useState } from \"react\";\r\n\r\nimport \"./DiceRollButton.scss\"\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n/*\r\n    Required inputs\r\n        - options\r\n        - singleValue\r\n        - noOptions\r\n        - bonus\r\n        - passData\r\n        - name\r\n\r\n        - dropdownStyle\r\n        - rollButtonStyle\r\n        - toggleButtonStyle\r\n        - menuStyle\r\n*/\r\n\r\nexport const DiceRollButton = (props) => {\r\n\r\n    let spellBonus = props.spellBonus === undefined ? 0 : (props.spellBonus === \"\" ? 0 : props.spellBonus)\r\n    let singleValue = props.singleValue === undefined ? 0 : props.singleValue\r\n    let noOptions = props.noOptions === undefined ? (props.options === undefined ? true : (props.options.length === 1)) : props.noOptions\r\n    let bonus = props.bonus === undefined ? 0 : (props.bonus === \"\" ? 0 : parseInt(props.bonus))\r\n    let testNoDice = props.singleValue === undefined ? null : (props.singleValue.toString()).includes(\"d\")\r\n    let hasDice = testNoDice != null && testNoDice != undefined ? testNoDice : false\r\n\r\n    const options = useMemo(() => {\r\n        if(props.options != undefined) {\r\n            if(props.options[0].value.includes(\" + MOD\")) {\r\n                let options1 = []\r\n                props.options.forEach((option, index) => {\r\n                    options1.push({label: option.label, value: option.value.replace(\" + MOD\", \" + \" + spellBonus.toString())})\r\n                })\r\n                return options1\r\n            }\r\n            else if(props.options.length === 1 ) {\r\n                if(!props.options[0].value.includes(\"d\")) {\r\n                    singleValue = props.options[0].value\r\n                }\r\n                else {\r\n                    singleValue = props.options[0].value\r\n                    hasDice = true\r\n                }\r\n                return props.options\r\n            }\r\n            else {\r\n                return props.options\r\n            }\r\n        }\r\n        else {\r\n            return props.options\r\n        }\r\n    }\r\n    , [props.options, props.spellBonus])\r\n    const [defaultValue, setDefaultValue] = useState(props.options === undefined ? singleValue : options[0].value)\r\n\r\n\r\n    const checkValueType = (splitValue) => {\r\n        if( splitValue === \"MOD\") {\r\n            return [\"Spellcasting Modifier\", \"modifier\"]\r\n        }\r\n        else {\r\n            let test = splitValue.includes(\"d\")\r\n            if(test) {\r\n                let split = splitValue.split(\"d\")\r\n                return [split, \"dice\"]\r\n            }\r\n            else {\r\n                return [splitValue, \"value\"]\r\n            }\r\n        }\r\n    }\r\n    const rollFunction = (value, type, rolls, result) => {\r\n        let resultVariable = result\r\n        let rollsVariable = rolls\r\n        if (type === \"dice\") {\r\n            let splitValue = value\r\n            for(let i=0; i<parseInt(splitValue[0]);i++) {\r\n                rollsVariable.push(1 + Math.floor(Math.random() * parseInt(splitValue[1])))\r\n                resultVariable += rollsVariable[i]\r\n            }\r\n            return [rollsVariable, resultVariable]\r\n        }\r\n        else if (type === \"value\") {\r\n            rollsVariable.push(parseInt(value))\r\n            resultVariable += parseInt(value)\r\n            return [rollsVariable, resultVariable]\r\n        }\r\n        if(type === \"modifier\") {\r\n            resultVariable += \" + Spellcasting Modifier\"\r\n            return [rollsVariable, resultVariable]\r\n        }\r\n        else {\r\n            console.log(\"Error: unknown type in rollFunction!\")\r\n        }\r\n    }\r\n    const handleRollClick = (event) => {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        let rolls = []\r\n        let result = 0 + bonus\r\n        console.log(defaultValue)\r\n        let [splitMain, splitExtra] = defaultValue.split(\"+\")\r\n        let [splitMainValue, splitMainType] = checkValueType(splitMain)\r\n        let mainRoll = rollFunction(splitMainValue, splitMainType, rolls, result)\r\n        rolls = mainRoll[0]\r\n        result = mainRoll[1]\r\n        if(splitExtra) {\r\n            let [splitExtraValue, splitExtraType] = checkValueType(splitExtra)\r\n            let extraRoll = rollFunction(splitExtraValue, splitExtraType, rolls, result)\r\n            rolls = extraRoll[0]\r\n            result = extraRoll[1]\r\n        }\r\n        props.passData(event, props.name, defaultValue, rolls, bonus, result)\r\n    }\r\n    const [showMenu, setShowMenu] = useState(false)\r\n    const handleToggle = (event) => {\r\n        event.stopPropagation()\r\n        setShowMenu(!showMenu)\r\n    }\r\n    const handleBlur = (event) => {\r\n        let dropdownEl = document.getElementById(\"dice-roll-dropdown\")\r\n        let menuEl = document.getElementById(\"dice-roll-dropdown\")\r\n        if(document.getElementById(\"dice-roll-menu\") != null) {\r\n            menuEl = document.getElementById(\"dice-roll-menu\")\r\n        }\r\n        let targetEl = event.target // clicked element\r\n        \r\n        if(targetEl.id == dropdownEl.id || targetEl.id == menuEl.id || targetEl.parentNode.id == dropdownEl.id || targetEl.parentNode.id == menuEl.id) {\r\n        // This is a click inside, does nothing, just return.\r\n            return\r\n        }\r\n        else if (showMenu) {\r\n        // This is a click outside.\r\n            setShowMenu(false)\r\n        }\r\n    }\r\n    const handleMenuItemClick = (event) => {\r\n        event.stopPropagation()\r\n        setDefaultValue(event.target.value)\r\n        //defaultValue = event.target.value\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!noOptions) {\r\n            console.log(\"initiate event listener\", noOptions)\r\n            document.addEventListener(\"click\", handleBlur)\r\n            return function cleanup() {\r\n                document.removeEventListener(\"click\", handleBlur)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            { !noOptions ?\r\n                <Dropdown id=\"dice-roll-dropdown\" onBlur={handleBlur} show={showMenu} style={props.dropdownStyle} className =\"dice-dropdown\">\r\n                    <Button variant=\"primary\" className=\"dice-button-button\" style={props.rollButtonStyle} onClick={handleRollClick}>\r\n                        {defaultValue} {props.bonus != \"\" && props.bonus != undefined ? \"+ \" + props.bonus.toString() : \"\"}\r\n                    </Button>\r\n                    <Dropdown.Toggle split variant=\"primary\" id=\"dropdown-custom-2\" className=\"dice-button-menu-toggle\" style={props.toggleButtonStyle} onClick={handleToggle}/>\r\n                    <Dropdown.Menu id=\"dice-roll-menu\" variant=\"dark\" style={props.menuStyle}>\r\n                        {options.map((option, index) => \r\n                            <Dropdown.Item  style={props.itemStyle} key={`dice-option-value-${option.value}`} as=\"button\" value={option.value} onClick={handleMenuItemClick}>{option.label}: {option.value}</Dropdown.Item>\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown> :\r\n                (hasDice ? \r\n                    <div style={props.dropdownStyle} className =\"dice-button-solo\">\r\n                        <Button variant=\"primary\" className=\"dice-button-button-solo\" style={props.rollButtonStyle} onClick={handleRollClick}>\r\n                            {singleValue} {props.bonus != \"\" && props.bonus != undefined ? \"+ \" + props.bonus.toString() : \"\"}\r\n                        </Button>\r\n                    </div> :\r\n                    <div style={props.noDiceValueStyle} className =\"no-dice-value\">\r\n                        <span>{singleValue} {props.bonus != \"\" && props.bonus != undefined ? \" + \" + props.bonus.toString() : \" \"} </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport { usePopper } from 'react-popper';\r\n\r\nimport { AiFillCloseSquare } from \"react-icons/ai\";\r\nimport { RiFileEditFill } from \"react-icons/ri\";\r\nimport { MdExpandLess, MdExpandMore } from \"react-icons/md/\";\r\n\r\nimport { deleteAction, setPrepared } from './ActionsSlice';\r\nimport { SpellCard } from '../../components/SpellCard';\r\nimport { ActionCard } from '../../components/ActionCard';\r\nimport { DiceRollButton } from '../../components/DiceRollButton';\r\nimport { addRoll } from '../settings/SettingsSlice';\r\n\r\nexport const ActionsTable = (props) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst [currentBody, setCurrentBody] = useState(\"\")\r\n\tconst charAttributes = useSelector(state => state.attributes.charAttributes)\r\n\tconst spellCastingAttribute = useSelector(state => state.attributes.casting.spellAttribute)\r\n\tconst proficiency = useSelector(state => state.attributes.proficiency)\r\n\tconst charLevel = useSelector(state => state.charDetails.charLevel)\r\n\tconst scalingBonus = (scale) => {\r\n\t\tif(scale === \"None\" || scale === \"\") {\r\n\t\t\treturn \"\"\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn charAttributes.filter((charAttribute) => scale === charAttribute.name)[0].bonus\r\n\t\t}\r\n\t}\r\n\tconst handleDelete = (event, id, index) => {\r\n\t\tevent.stopPropagation()\r\n\t\tdispatch(deleteAction(id, props.id))\r\n\t}\r\n\tconst handlePrepared = (event) => {\r\n\t\tevent.stopPropagation()\r\n\t\tlet id = event.target.id\r\n\t\tlet checked = event.target.checked\r\n\t\tlet offCanvas = props.offCanvas\r\n\t\tdispatch(setPrepared(id, checked, offCanvas))\r\n\t}\r\n\tconst startEdit = (event, body) => {\r\n\t\tevent.stopPropagation()\r\n\t\tprops.setDefaultValues(body)\r\n\t\tprops.setOldData(body)\r\n\t\tprops.setEditing(true)\r\n\t\tprops.setShowQuickAddAction(true)\r\n\t\tprops.setInputFocus()\r\n\t\tprops.inputRef.current.scrollIntoView()\r\n\t}\r\n\tlet place = props.offCanvas ? \"left\" : \"right\"\r\n\tlet cardID = props.cardID\r\n\tconst [showDetails, setShowDetails] = useState([false, \"bla\"])\r\n\tconst [showPopover, setShowPopover] = useState([false,cardID])\r\n\tuseEffect(() => {\r\n\t\tif(showPopover[1] != cardID) {\r\n\t\t\tsetShowPopover([showPopover[0], cardID])\r\n\t\t}\r\n\t}, [showPopover, cardID])\r\n\tconst handleRowClick = (event, id) => {\r\n\t\tsetCurrentBody(props.bodies.find((body, index) => (body.id === id)))\r\n\t\tlet test\r\n\t\tcardID = props.cardID\r\n\t\ttest = `${props.offCanvas}-action-table-row-id-${id}`\r\n\t\tsetReferenceElement(document.getElementById(test))\r\n\t\tprops.setCardID(id)\r\n\t\tcardID = id\r\n\t\tif(showDetails[0] && showDetails[1] === id) {\r\n\t\t\tsetShowDetails([false, \"bla\"])\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowDetails([true, id])\r\n\t\t}\r\n\t\t\r\n\t\tif(showPopover[1] === id) {\r\n\t\t\tsetShowPopover([!showPopover[0], id])\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(showPopover[0]) {\r\n\t\t\t\tsetShowPopover([showPopover[0], id])\r\n\t\t\t\tprops.setCardID(id)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetShowPopover([!showPopover[0], id])\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst [referenceElement, setReferenceElement] = useState(null);\r\n\tconst [popperElement, setPopperElement] = useState(null);\r\n\tconst [arrowElement, setArrowElement] = useState(null);\r\n\tconst { styles, attributes } = usePopper(referenceElement, popperElement, {\r\n\t\tplacement: place,\r\n    \tmodifiers: [{ name: 'arrow', options: { element: arrowElement } },\r\n\t\t\t\t\t{ name: \"offset\", options: { offset: [ 0,10]} }],\r\n  \t});\r\n\t//const ref = useOutsideClick(handleRowClick)\r\n\tconst convertTemplate =(damageAtHigherLevel, id, damage) => {\r\n\t\tlet keys\r\n\t\tlet object = []\r\n\t\tlet singleValue = 1\r\n\t\tif(id === \"dmgHigherLevel\") {\r\n\t\t\tif(damageAtHigherLevel === \"None\") {\r\n\t\t\t\tobject.push({value: damage, label:\"1\"})\r\n\t\t\t\treturn object\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tkeys = Object.keys(damageAtHigherLevel)\r\n\t\t\t\tfor(let key of keys) {\r\n\t\t\t\t\tobject.push({value: damageAtHigherLevel[key], label: key})\r\n\t\t\t\t}\r\n\t\t\t\treturn object\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(id === \"cantrip\") {\r\n\t\t\tkeys = Object.keys(damageAtHigherLevel)\r\n\t\t\tsingleValue = damageAtHigherLevel[keys[0]]\r\n\t\t\tfor(let i=1; i<keys.length; i++) {\r\n\t\t\t\tif( charLevel < parseInt(keys[i])) {\r\n\t\t\t\t\tsingleValue = damageAtHigherLevel[keys[i-1]]\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(charLevel >= parseInt(keys[keys.length -1])) {\r\n\t\t\t\tsingleValue = damageAtHigherLevel[keys[keys.length -1]]\r\n\t\t\t}\r\n\t\t\treturn singleValue\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn object\r\n\t\t}\r\n\t}\r\n\tconst handleRoll = (event, name, defaultValue, rolls, bonus, result) => {\r\n\t\tdispatch(addRoll([name, defaultValue, rolls, bonus, result]))\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div  key={props.index} style={{marginLeft:\"0.5em\", marginRight:\"0.5em\"}}>\r\n\t\t\t{ false && showPopover[0] && showPopover[1] === currentBody.id && cardID === currentBody.id ?\r\n\t\t\t\t<div className=\"popover-test\" ref={setPopperElement} style={styles.popper} {...attributes.popper}>\r\n\t\t\t\t\t{props.spells ? \r\n\t\t\t\t\t\t<SpellCard id={`spellcard-${currentBody.id}`} offCanvas={props.offCanvas} data={currentBody}/> :\r\n\t\t\t\t\t\t<ActionCard id ={`actioncard-${currentBody.id}`} data={currentBody}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tref={setArrowElement}\r\n\t\t\t\t\t\tstyle={styles.arrow}\r\n\t\t\t\t\t\t{...attributes.arrow}\r\n\t\t\t\t\t\tclassName={`arrow arrow-${place}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> : null\r\n\t\t\t}\r\n\t\t\t<h5> {props.header} {props.spells ? (props.header === \"Cantrip\" ? \"\": \"Level\") :\"\"} </h5>\r\n\t\t\t<Table size=\"sm\" style={{color:\"white\", border:\"black\"}} >\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{props.spells ? <th>{props.offCanvas ? \"Learn\" : \"\"}</th> : null}\r\n\t\t\t\t\t\t<th> Name </th>\r\n\t\t\t\t\t\t{props.spells ? null : <th> Hit </th>}\r\n\t\t\t\t\t\t{props.offCanvas ? null : <th> Damage (Type) </th>}\r\n\t\t\t\t\t\t{props.offCanvas ? <th> School </th> : <th> Range </th>}\r\n\t\t\t\t\t\t{props.offCanvas ? null : <th> {\"\"} </th>}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{props.bodies.map( (body, index) => (\r\n\t\t\t\t\t\t(props.offCanvas ? body.filtered : true) ?\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<tr className=\"action-table\" key={`${props.offCanvas}-action-table-row-id-${body.id}`} id={`${props.offCanvas}-action-table-row-id-${body.id}`} onBlur={event => setShowPopover([false, body.id])} onClick={(event) => handleRowClick(event, body.id)} >\r\n\t\t\t\t\t\t\t\t\t{props.spells ? \r\n\t\t\t\t\t\t\t\t\t\t<td  style={{height:\"1.5em\", width:\"1.5em\", zIndex:\"2\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={`checkbox-wrapper ${props.offCanvas ? \"letter-k\" : \"letter-p\"}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id={body.name} value=\"prepared\" onClick={handlePrepared} defaultChecked={body.isPrepared}></input>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td> : \"\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<td>{body.name}</td>\r\n\t\t\t\t\t\t\t\t\t{props.spells ? \"\" : <td>{ body.damage != \"None\" && body.damage != \"none\" ? (body.isProficient ? proficiency.value + scalingBonus(body.scaling) : 0 + scalingBonus(body.scaling)) : \"-\" } </td>}\r\n\t\t\t\t\t\t\t\t\t{props.offCanvas ? \"\" : (props.spells ? \r\n\t\t\t\t\t\t\t\t\t\t<td> \r\n\t\t\t\t\t\t\t\t\t\t\t{ !(props.header === \"Cantrip\") ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"flex\", flexWrap:\"wrap\"}}> {body.damage != \"None\" ?  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DiceRollButton passData={handleRoll} name={`${body.name}`} options={convertTemplate(body.damageAtHigherLevel, \"dmgHigherLevel\", body.damage)} spellBonus={scalingBonus(spellCastingAttribute)} /> : body.damage} {body.damageType != \"None\" ? \"(\" + body.damageType + \")\" : \"\"} \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div> :\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"flex\", flexWrap:\"wrap\"}}> {body.damage != \"None\" ?  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DiceRollButton passData={handleRoll} name={`${body.name}`}  noDice={true} noOptions={true} singleValue={convertTemplate(body.damageAtHigherLevel, \"cantrip\")}/> : body.damage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{body.damageType != \"None\" ? \"(\" + body.damageType + \")\" : \"\"} \r\n\t\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</td> : \r\n\t\t\t\t\t\t\t\t\t\t<td> \r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"flex\", flexWrap:\"wrap\"}}> \r\n\t\t\t\t\t\t\t\t\t\t\t\t<DiceRollButton passData={handleRoll} name={`${body.name}`} noDice={true} noOptions={true} singleValue={body.damage} bonus={scalingBonus(body.scaling)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t({body.damageType}) \r\n\t\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t\t</td>)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{props.offCanvas ? <td>{body.school}</td> : <td>{body.range}</td> }\r\n\t\t\t\t\t\t\t\t\t{props.offCanvas ? \"\" : \r\n\t\t\t\t\t\t\t\t\t<td style={{paddingRight:\"0\",paddingLeft:\"0\", justifyItems:\"end\", zIndex:\"2\", height:\"2.25em\", width:\"4.5em\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"react-icons-button\" onClick={(event) => startEdit(event, body)} aria-label={`edit ${props.spells ? \"spell\":\"action\"}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<RiFileEditFill size=\"1.5em\" className=\"edit-button\" />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"react-icons-button\" onClick={(event) => handleDelete(event, body.id, index)} aria-label={`delete ${props.spells ? \"spell\":\"action\"}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<AiFillCloseSquare size=\"1.5em\" className=\"delete-button\" /> \r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t{showDetails[0] && showDetails[1] === body.id ?\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"react-icons-button\" onClick={(event) => setShowDetails([false, \"bla\"])} aria-label={`expand ${props.spells ? \"spell\":\"action\"} details`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MdExpandLess size=\"1.5em\" className=\"expand-button\" /> \r\n\t\t\t\t\t\t\t\t\t\t\t</button> :\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"react-icons-button\" onClick={(event) => setShowDetails([true, body.id])} aria-label={`expand ${props.spells ? \"spell\":\"action\"} details`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MdExpandMore size=\"1.5em\" className=\"expand-button\" /> \r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t{showDetails[0] && showDetails[1] === body.id ?\r\n\t\t\t\t\t\t\t\t\t<tr key={`spell-details-id-${body.id}`}>\r\n\t\t\t\t\t\t\t\t\t\t{props.spells ? \r\n\t\t\t\t\t\t\t\t\t\t\t<td style={{borderRight:\"1px solid rgba(1,1,1,0.5)\", borderLeft:\"1px solid rgba(1,1,1,0.5)\"}} colSpan={5}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SpellCard id={`spellcard-${currentBody.id}`} offCanvas={props.offCanvas} data={currentBody}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</td> :\r\n\t\t\t\t\t\t\t\t\t\t\t<td style={{borderRight:\"1px solid rgba(1,1,1,0.5)\", borderLeft:\"1px solid rgba(1,1,1,0.5)\"}} colSpan={5}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ActionCard id ={`actioncard-${currentBody.id}`} data={currentBody}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</tr> : null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t: \"\" ))\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect, useReducer, useRef, useState } from \"react\";\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useFocus } from \"../../components/CustomHooks\";\r\n\r\nexport const ActionsAdd = (props) => {\r\n    //these are only initialized like this for a visual of the necessary props\r\n    const editing = props.editing === undefined ? false : props.editing\r\n    const setEditing = props.setEditing\r\n    const defaultValues = props.defaultValues\r\n    const setDefaultValues = props.setDefaultValues\r\n    let spells = props.spells === undefined ? false : props.spells\r\n    const actionTemplate = props.actionTemplate\r\n    const handleSubmit = props.handleSubmit\r\n    const handleSelectValues = props.handleSelectValues\r\n    const options = props.options\r\n    const show = props.show\r\n\r\n    //this is the reference used to position a tooltip when a dupilcate name is entered\r\n    const inputNameRef = props.inputRef\r\n    const [inputDamageRef, setInputDamageFocus] = useFocus()\r\n    const [showDamageTooltip, setShowDamageTooltip] = useState(false)\r\n    const [damageTest, setDamageTest] = useState(defaultValues.damage)\r\n\r\n    //This variable is for accessibility only, used to differentiate between actions and spells in aria-labels\r\n    let ariaLabel = spells ? \"spell\":\"action\"\r\n    \r\n    const attributesList = [\"Strength\", \"Dexterity\", \"Constitution\", \"Intelligence\", \"Wisdom\", \"Charisma\", \"None\"]\r\n    const schoolList = [\"Abjuration\", \"Conjuration\", \"Divination\", \"Enchantment\",\"Evocation\", \"Illusion\", \"Necromancy\", \"Transmutation\"]\r\n    const damageTypeList = [\"Bludgeoning\", \"Slashing\", \"Piercing\", \"Heal\", \"Cold\", \"Lightning\", \"Thunder\", \"Acid\", \"Poison\", \"Necrotic\", \"Radiant\", \"Psychic\", \"Force\", \"Special\", \"None\"]\r\n    const componentsList = [[\"V\"], [\"S\"], [\"M\"], [\"V\", \"S\"], [\"V\", \"M\"], [\"S\", \"M\"], [\"V\", \"S\", \"M\"]]\r\n    const cancelEditing = (event) => {\r\n        setEditing(false)\r\n        setDefaultValues(actionTemplate)\r\n    }\r\n    \r\n    const checkIfDice = (stringToCheck) => {\r\n        let isDice\r\n        if(stringToCheck.includes(\"d\")) {\r\n            let split = stringToCheck.split(\"d\")\r\n            let firstPart = isNaN(parseInt(split[0]))\r\n            let secondPart = isNaN(parseInt(split[1]))\r\n            isDice = !firstPart && !secondPart\r\n        }\r\n        else {\r\n            isDice = !isNaN(parseInt(stringToCheck))\r\n        }\r\n        return isDice\r\n    }\r\n    const damageValidation = (damage) => {\r\n        if(damage === \"none\" || damage === \"None\" || damage === \"\") {\r\n            return true\r\n        }\r\n        else if (damage.includes(\"d\")) {\r\n            let test = damage.split(\"+\")\r\n            let expressionOne = checkIfDice(test[0])\r\n            let expressionTwo = true\r\n            if(test[2] != undefined) {\r\n                expressionTwo = checkIfDice(test[1])\r\n            }\r\n            test = expressionOne && expressionTwo\r\n            return test\r\n        }\r\n        else if(!isNaN(parseInt(damage))) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n    const handleDamageChange = (event) => {\r\n        setDamageTest(event.target.value)\r\n        handleSelectValues(event.target.value, \"damage\")\r\n    }\r\n    useEffect(() => {\r\n        if(spells) {\r\n            if(defaultValues.duration === undefined) {\r\n                setDefaultValues(actionTemplate)\r\n            }\r\n        }\r\n        else if(defaultValues.isProficient === undefined) {\r\n            setDefaultValues(actionTemplate)\r\n        }\r\n    }, [defaultValues, setDefaultValues, actionTemplate])\r\n    useEffect(() => {\r\n        if(editing) {\r\n            if(!damageValidation(damageTest)) {\r\n                setShowDamageTooltip(true)\r\n            }\r\n            else {\r\n                handleSelectValues(damageTest, \"damage\")\r\n                setShowDamageTooltip(false)\r\n            }\r\n        }\r\n    }, [damageTest])\r\n    useEffect(() => {\r\n        setDamageTest(defaultValues.damage)\r\n    }, [defaultValues.damage])\r\n    const preValidate= (event) => {\r\n        event.preventDefault()\r\n        if(damageValidation(damageTest)) {\r\n            handleSubmit(event)\r\n        }\r\n        else {\r\n            setInputDamageFocus()\r\n        }\r\n    }\r\n    const addActionForm = (modal) => {\r\n        return (\r\n            <Form aria-label={`${editing ? \"edit\":\"add-new\"}-${ariaLabel}-form`} onSubmit={preValidate} style={{color:\"black\"}}>\r\n                <Modal.Body>\r\n                    <InputGroup>\r\n                        <FloatingLabel controlId={`${ariaLabel}-name`} label=\"Name\">\r\n                            <Form.Control aria-labelledby={`${ariaLabel}-name`} ref={inputNameRef} required value={defaultValues.name} className={`${modal ? \"top\":\"middle\"}-left-group`} placeholder=\"\" onChange={event => handleSelectValues(event, \"name\")}/>\r\n                        </FloatingLabel>\r\n                        <Overlay target={inputNameRef.current} show={show} placement=\"top-end\" flip>\r\n                            <Tooltip id=\"unique-name-overlay\" style={{opacity:\"1\"}}>\r\n                                Please enter unique Name.\r\n                            </Tooltip>\r\n                        </Overlay>\r\n                        <FloatingLabel controlId={`${ariaLabel}-range`} label=\"Range\">\r\n                            <Form.Control required value={defaultValues.range} placeholder=\"\" aria-labelledby={`${ariaLabel}-range`} onChange={event => handleSelectValues(event, \"range\")}/>\r\n                        </FloatingLabel>\r\n                        <FloatingLabel controlId={`${ariaLabel}-damage`} label=\"Damage\">\r\n                            <Form.Control required value={damageTest} ref={inputDamageRef} className={`${modal ? \"top\":\"middle\"}-right-group`} placeholder=\"\" aria-labelledby={`${ariaLabel}-damage`} onChange={event => handleDamageChange(event)}/>\r\n                        </FloatingLabel>\r\n                        <Overlay target={inputDamageRef.current} show={showDamageTooltip} placement=\"top-end\" flip>\r\n                            <Tooltip id=\"damage-layout-overlay\" style={{opacity:\"1\"}}>\r\n                                Damage must have form of either\r\n                                <ul>\r\n                                    <li> {\"<number>d<number>, e.g 2d8, 1d20\"} </li>\r\n                                    <li> {\"A single integer, e.g 20 or 4\"} </li>\r\n                                    <li>{\"A combination of the two, joing by a \"+\", e.g 1d4 + 1, 2d4 + 2d8, 20 + 5d10\"}</li>\r\n                                    <li>{'\"None\" or \"none\" if the action/spell has no damage component'}</li>\r\n                                </ul>\r\n                            </Tooltip>\r\n                        </Overlay>\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <FloatingLabel controlId={`${ariaLabel}-${spells ? \"tier\":\"type\"}`} label={`${spells ? \"Tier\":\"Type\"}`}>\r\n                            <Form.Select required value={defaultValues.type} className=\"middle-left-group\" aria-labelledby={`${ariaLabel}-${spells ? \"tier\":\"type\"}`} onChange={event => handleSelectValues(event, \"type\")}>\r\n                                {!spells ? \r\n                                    <option key=\"0\" value=\"\">Choose Action Type</option>\r\n                                        :\r\n                                    <option key=\"0\" value=\"\">Choose Spell Tier</option>}\r\n                                {options.map((option1, index) => \r\n                                    <option key={`action-type-${option1}`} value={option1}>{option1}</option>\r\n                                )}\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n                        <FloatingLabel controlId={`${ariaLabel}-scaling-attribute`} label=\"Scaling Attribute\">\r\n                            <Form.Select required value={defaultValues.scaling} className=\"middle-right-group\" aria-labelledby={`${ariaLabel}-scaling-attribute`} onChange={event => handleSelectValues(event, \"scaling\")}>\r\n                                <option value=\"\">Choose Scaling Attribute</option>\r\n                                {attributesList.map((option1, index) => \r\n                                    <option key={`scaling-attribute-${option1}`} value={option1}>{option1}</option>\r\n                                )}\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n                    </InputGroup>\r\n                    {spells && defaultValues.duration != undefined ?\r\n                    <>\r\n                        <InputGroup>\r\n                            <FloatingLabel controlId={`${ariaLabel}-school`} label=\"School\">\r\n                                <Form.Select required value={defaultValues.school} className=\"middle-left-group\" aria-labelledby={`${ariaLabel}-school`} onChange={event => handleSelectValues(event, \"school\")}>\r\n                                    <option value=\"\">Choose school</option>\r\n                                    {schoolList.map((school, index) => (\r\n                                        <option key={`spell-shool-${school}`} value={school}>{school}</option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                            <FloatingLabel controlId={`${ariaLabel}-is-ritual`} label=\"Is Ritual?\">\r\n                                <Form.Select required value={defaultValues.ritual} className=\"middle-right-group\" type=\"boolean\" aria-labelledby={`${ariaLabel}-is-ritual`} onChange={event => handleSelectValues(event, \"ritual\")}>\r\n                                    <option value=\"\"> Choose is ritual </option>\r\n                                    <option value={true}>Yes</option>\r\n                                    <option value={false}>No</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                        </InputGroup>\r\n                        <InputGroup>\r\n                            <FloatingLabel controlId={`${ariaLabel}-casting-time`} label=\"Casting time\">\r\n                                <Form.Control required type=\"text\" value={defaultValues.castingTime} className=\"middle-left-group\" placeholder=\"\" aria-labelledby={`${ariaLabel}-casting-time`} onChange={event => handleSelectValues(event, \"castingTime\")}/>\r\n                            </FloatingLabel>\r\n                            <FloatingLabel controlId={`${ariaLabel}-duration`} label=\"Duration\">\r\n                                <Form.Control required type=\"text\" value={defaultValues.duration[0]} placeholder=\"\" aria-labelledby={`${ariaLabel}-duration`} onChange={event => handleSelectValues(event, \"duration_0\")}/>\r\n                            </FloatingLabel>\r\n                            <FloatingLabel controlId={`${ariaLabel}-concentration`} label=\"Concentration?\">\r\n                                <Form.Select required value={defaultValues.duration[1]} className=\"middle-right-group\" type=\"boolean\" aria-labelledby={`${ariaLabel}-concentration`} onChange={event => handleSelectValues(event, \"duration_1\")}>\r\n                                    <option value=\"\"> Requires concentration? </option>\r\n                                    <option value={true}>Yes</option>\r\n                                    <option value={false}>No</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                        </InputGroup>\r\n                    </>\r\n                    : null}\r\n                    <InputGroup>\r\n                        {spells && defaultValues.duration != undefined ? \r\n                            <FloatingLabel controlId={`${ariaLabel}-components`} label=\"Components\">\r\n                                <Form.Select required value={defaultValues.components} className=\"middle-left-group\" type=\"text\" aria-labelledby={`${ariaLabel}-components`} onChange={event => handleSelectValues(event, \"components\")}> \r\n                                    <option value=\"\">Choose components</option>\r\n                                    {componentsList.map((component, index) => \r\n                                        <option key={`component-choice-${component}`} value={component}>{component}</option>\r\n                                    )}\r\n                                </Form.Select> \r\n                            </FloatingLabel> : \r\n                            <FloatingLabel controlId={`${ariaLabel}-is-proficient`} label=\"Is Proficient?\">\r\n                                <Form.Select required value={defaultValues.isProficient} className=\"middle-left-group\" type=\"boolean\" aria-labelledby={`${ariaLabel}-is-proficient`} onChange={event => handleSelectValues(event, \"isProficient\")}> \r\n                                    <option value=\"\">Choose if proficient</option>\r\n                                    <option value={true}>Yes</option>\r\n                                    <option value={false}>No</option>\r\n                                </Form.Select> \r\n                            </FloatingLabel>\r\n                        }\r\n                        <FloatingLabel controlId={`${ariaLabel}-damage-type`} label=\"Damage Type\">\r\n                            <Form.Select required value={defaultValues.damageType} className=\"middle-right-group\" aria-labelledby={`${ariaLabel}-damage-type`} onChange={event => handleSelectValues(event, \"damageType\")}>\r\n                                <option value=\"\">Choose Damage Type</option>\r\n                                {damageTypeList.map((damageType, index) => \r\n                                    <option key={`damage-type-${damageType}`} value={damageType}>{damageType}</option>\r\n                                )}\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n                        {!modal ? <Button variant=\"success\" className=\"middle-right-group\" aria-label=\"Submit\" type=\"submit\">Submit</Button>:null}\r\n                    </InputGroup>\r\n                    <FloatingLabel controlId={`${ariaLabel}-description`} label=\"Description\">\r\n                        <Form.Control as=\"textarea\" className=\"middle-left-group middle-right-group\" style={{height:\"8em\"}} aria-label=\"description\" placeholder=\"\" value={defaultValues.description[0]} onChange={event => handleSelectValues(event, \"description_0\")}/>\r\n                    </FloatingLabel>\r\n                    {spells && defaultValues.duration != undefined ?\r\n                        <FloatingLabel controlId={`${ariaLabel}-description-at-higher-level`} label=\"At higher level\">\r\n                            <Form.Control as=\"textarea\" className=\"bottom-left-group bottom-right-group\" style={{height:\"8em\"}} aria-label=\"at higher level\" placeholder=\"\" value={defaultValues.description[1]} onChange={event => handleSelectValues(event, \"description_1\")}/>\r\n                        </FloatingLabel> : null\r\n                    }\r\n                </Modal.Body>\r\n                {modal ? <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => props.setShowAddAction(false)}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer> : null}\r\n            </Form>\r\n        )   \r\n    }\r\n    /*\r\n    const addActionFormProperLabel = () => {\r\n        return(\r\n            <Form aria-labelledby={`add-new-${ariaLabel}-dialog`} onSubmit={handleSubmit}>\r\n                <Modal.Body>\r\n                    <InputGroup>\r\n                        <InputGroup.Text as=\"label\" id={`add-new-${ariaLabel}`} className=\"top-left-group top-right-group\" style={{flexGrow:\"2\"}}> {editing ? (\"Currently editing: \" + defaultValues.name) : (spells ? \"Add New Spell\" : \"Add New Action/Bonus Action/etc:\") } </InputGroup.Text>\r\n                        {editing ? <Button onClick={() => (setEditing(false), setDefaultValues(actionTemplate))}>Cancel</Button> : \"\" }\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <InputGroup.Text as=\"label\" id={`${ariaLabel}-name`} className=\"middle-left-group\">Name</InputGroup.Text>\r\n                        <Form.Control autoFocus aria-labelledby={`${ariaLabel}-name`} ref={inputNameRef} required value={defaultValues.name} className=\"middle-left-group\" placeholder=\"Name\" aria-label=\"Name\" onChange={event => handleSelectValues(event, \"name\")}/>\r\n                        <Overlay target={inputNameRef.current} show={show} placement=\"top\">\r\n                            <Tooltip id=\"overlay-example\">\r\n                                Please enter unique Name.\r\n                            </Tooltip>\r\n                        </Overlay>\r\n                        <InputGroup.Text as=\"label\" id={`${ariaLabel}-range`}>Range</InputGroup.Text>\r\n                        <Form.Control aria-labelledby={`${ariaLabel}-range`} required value={defaultValues.range} placeholder=\"Range\" aria-label=\"Range\"  onChange={event => handleSelectValues(event, \"range\")}/>\r\n                        <InputGroup.Text as=\"label\" id={`${ariaLabel}-damage`}>Damage</InputGroup.Text>\r\n                        <Form.Control required value={damageTest} ref={inputDamageRef} className=\"middle-right-group\" placeholder=\"Damage\" aria-labelledby={`${ariaLabel}-damage`} onChange={event => handleDamageChange(event)}/>\r\n                        <Overlay target={inputDamageRef.current} show={showDamageTooltip} placement=\"top-end\" flip>\r\n                            <Tooltip id=\"damage-layout-overlay\" style={{opacity:\"1\"}}>\r\n                                Damage must have form of either\r\n                                <ul>\r\n                                    <li> {\"<number>d<number>, e.g 2d8, 1d20\"} </li>\r\n                                    <li> {\"A single integer, e.g 20 or 4\"} </li>\r\n                                    <li>{\"A combination of the two, joing by a \"+\", e.g 1d4 + 1, 2d4 + 2d8, 20 + 5d10\"}</li>\r\n                                    <li>{'\"None\" or \"none\" if the action/spell has no damage component'}</li>\r\n                                </ul>\r\n                            </Tooltip>\r\n                        </Overlay>\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <InputGroup.Text as=\"label\" id={`select-${ariaLabel}-type`} className=\"middle-left-group\">{spells ? \"Spell Tier\" : \"Action Type\"}</InputGroup.Text>\r\n                        <Form.Select required value={defaultValues.type} aria-labelledby={`select-${ariaLabel}-type`} onChange={event => handleSelectValues(event, \"type\")}>\r\n                            {!spells ? <option key=\"0\" value=\"\">Choose Action Type</option>:<option key=\"0\" value=\"\">Choose Spell Tier</option>}\r\n                            {options.map((option1, index) => \r\n                                <option key={`${option1}`} value={option1}>{option1}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                        <InputGroup.Text as=\"label\" id={`${ariaLabel}-scaling-attribute`}>Scales with:</InputGroup.Text>\r\n                        <Form.Select required value={defaultValues.scaling} aria-labelledby={`${ariaLabel}-scaling-attribute`} className=\"middle-right-group\" onChange={event => handleSelectValues(event, \"scaling\")}>\r\n                            <option value=\"\">Choose Scaling Attribute</option>\r\n                            {attributesList.map((option1, index) => \r\n                                <option key={`scaling-attribute-${option1}`} value={option1}>{option1}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                    {spells ?\r\n                    <InputGroup>\r\n                        <InputGroup.Text as=\"label\" id={`${ariaLabel}-school`} className=\"middle-left-group\">Spell School</InputGroup.Text>\r\n                        <Form.Select required value={defaultValues.school} aria-labelledby={`${ariaLabel}-school`} onChange={event => handleSelectValues(event, \"school\")}>\r\n                            <option value=\"\">Choose school</option>\r\n                            {schoolList.map((school, index) => (\r\n                                <option key={`spell-shool-${index}`} value={school}>{school}</option>\r\n                            ))}\r\n                        </Form.Select>\r\n                        <InputGroup.Text as=\"label\" id={`${ariaLabel}-ritual`}>Ritual</InputGroup.Text>\r\n                        <Form.Select required value={defaultValues.ritual} aria-labelledby={`${ariaLabel}-ritual`} className=\"middle-right-group\" type=\"boolean\" aria-label=\"is-ritual\" onChange={event => handleSelectValues(event, \"ritual\")}>\r\n                            <option value=\"\"> Is ritual? </option>\r\n                            <option value={true}>Yes</option>\r\n                            <option value={false}>No</option>\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                    : \"\"}\r\n                    <InputGroup>\r\n                        {spells ? \r\n                        \"\" : \r\n                        <>\r\n                            <InputGroup.Text as=\"label\" id={`${ariaLabel}-is-proficient`} className=\"middle-left-group\">Proficient</InputGroup.Text>\r\n                            <Form.Select required value={defaultValues.isProficient} aria-labelledby={`${ariaLabel}-is-proficient`} onChange={event => handleSelectValues(event, \"isProficient\")}> \r\n                                <option value=\"\">Is proficient?</option>\r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>No</option>\r\n                            </Form.Select> \r\n                        </>}\r\n                        <InputGroup.Text as=\"label\" id={`${ariaLabel}-damage-type`} className=\"middle-left-group\">Damage Type</InputGroup.Text>\r\n                        <Form.Select required value={defaultValues.damageType} aria-labelledby={`${ariaLabel}-damage-type`} className=\"middle-right-group\" onChange={event => handleSelectValues(event, \"damageType\")}>\r\n                            <option value=\"\">Choose Damage Type</option>\r\n                            {damageTypeList.map((damageType, index) => \r\n                                <option key={`damage-type-${damageType}`} value={damageType}>{damageType}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </InputGroup>\r\n                    <InputGroup.Text as=\"label\" id={`${ariaLabel}-description`} className=\"middle-right-group middle-left-group\">Description</InputGroup.Text>\r\n                    <Form.Control as=\"textarea\" className=\"middle-left-group middle-right-group\" aria-labelledby={`${ariaLabel}-description`} placeholder=\"Description\" value={defaultValues.description[0]} onChange={event => handleSelectValues(event, \"description_0\")}/>\r\n                    {spells ?\r\n                        <>\r\n                            <InputGroup.Text as=\"label\" id={`${ariaLabel}-description-at-higher-level`} className=\"middle-right-group middle-left-group\">At higher level:</InputGroup.Text>\r\n                            <Form.Control as=\"textarea\" className=\"bottom-left-group bottom-right-group\" style={{height:\"8em\"}} aria-labelledby={`${ariaLabel}-description-at-higher-level`} placeholder=\"At higher level\" value={defaultValues.description[1]} onChange={event => handleSelectValues(event, \"description_1\")}/>\r\n                        </> : null\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => props.setShowAddAction(false)}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n        )\r\n    }\r\n    */\r\n    return(\r\n        <>\r\n            <div aria-labelledby={`${editing ? \"edit\":\"add-new\"}-${ariaLabel}`} className={props.showQuickAddAction ? null:\"visually-hidden\"}>\r\n                <InputGroup>\r\n                    <InputGroup.Text as=\"label\" id={`${editing ? \"edit\":\"add-new\"}-${ariaLabel}`} className=\"top-left-group top-right-group\" style={{flexGrow:\"2\"}}> {editing ? (\"Currently editing: \" + defaultValues.name) : (spells ? \"Add New Spell\" : \"Add New Action/Bonus Action/etc:\") } </InputGroup.Text>\r\n                    {editing ? <Button onClick={cancelEditing}>Cancel</Button> : \"\" }\r\n                </InputGroup>\r\n                {addActionForm(false)}\r\n            </div>\r\n            <Modal backdrop=\"static\" aria-labelledby={`add-new-${ariaLabel}-dialog`} contentClassName=\"modal-custom\" size=\"lg\" show={props.showAddAction} onHide={() => props.setShowAddAction(false)}>\r\n                <Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title as=\"label\" id={`add-new-${ariaLabel}-dialog`}>\r\n\t\t\t\t\t\tAdding a new {spells ? \"Spell\":\"Action\"}\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n                {addActionForm(true)}\r\n            </Modal>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Container from 'react-bootstrap/Container';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nimport { ActionsTable } from './ActionsTable';\r\nimport { filterSpells } from './ActionsSlice';\r\n\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\nexport const SpellList = (props) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst inheritShow = props.inheritShow\r\n\tconst setInheritShow = props.setInheritShow\r\n\r\n\tconst sortedSpellList= useSelector(state => state.actions.sortedSpellList)\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [spellCardID, setSpellCardID] = useState(\"0\")\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetShow(false)\r\n\t\tdispatch(filterSpells([{spellslots: [], schools: [], ritual: [], classes: []}, \"\"]))\r\n\t\tsetInheritShow(!inheritShow)\r\n\t}\r\n\tconst handleShow = () => {\r\n\t\tsetShow(true)\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif(inheritShow) {\r\n\t\t\thandleShow()\r\n\t\t}\r\n\t}, [inheritShow])\r\n\t\r\n\tconst [filters, setFilters] = useState({spellslots: [], schools: [], ritual: [], classes: []})\r\n\tconst [searchField, setSearchField] = useState(\"\")\r\n\tconst filterKeys = Object.keys(filters)\r\n\tconst handleDelete = (event, index, type) => {\r\n\t\tlet copy = structuredClone(filters)\r\n\t\tcopy[type] = copy[type].slice(0,index).concat(copy[type].slice(index+1))\r\n\t\tsetFilters(copy)\r\n\t\tdispatch(filterSpells([copy, searchField]))\r\n\t}\r\n\t\r\n\tlet headers = [\"Cantrip\",\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\"]\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Offcanvas border=\"dark\" style={{color:\"white\", backgroundColor:\"#6c757d\", width:\"478px\", marginTop:\"3em\"}} show={show} onHide={handleClose} placement=\"start\" scroll=\"true\">\r\n\t\t\t\t<Offcanvas.Header closeButton onClick={handleClose}>\r\n\t\t\t\t\t<Offcanvas.Title>Spell List</Offcanvas.Title>\r\n\t\t\t\t</Offcanvas.Header>\r\n\t\t\t\t<Offcanvas.Body>\r\n\t\t\t\t\t<FilterSelection filters={filters} searchField={searchField} setFilters={setFilters} setSearchField={setSearchField}/>\r\n\t\t\t\t\t<Container fluid className=\"filter-container\">\r\n\t\t\t\t\t\t<span>Filters: </span>\r\n\t\t\t\t\t\t{filterKeys.map(key => (\r\n\t\t\t\t\t\t\tfilters[key].map((filter, index) => (\r\n\t\t\t\t\t\t\t\t<FilterItem key={`filter-item-${filter}`} index={index} type={key} name={filter} handleDelete={handleDelete}/>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t{headers.map((header, index) => (\r\n\t\t\t\t\t\t<ActionsTable \r\n\t\t\t\t\t\t\tcardID={spellCardID}\r\n\t\t\t\t\t\t\tsetCardID={setSpellCardID} \r\n\t\t\t\t\t\t\toffCanvas={true} \r\n\t\t\t\t\t\t\tid={props.id} \r\n\t\t\t\t\t\t\tkey={`action-table-${header}`} \r\n\t\t\t\t\t\t\theader={header} \r\n\t\t\t\t\t\t\tsearchField={searchField} \r\n\t\t\t\t\t\t\tfilters={filters} \r\n\t\t\t\t\t\t\tbodies={sortedSpellList.filter((action) => {return action.type === header})} \r\n\t\t\t\t\t\t\tspells=\"true\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Offcanvas.Body>\r\n\t\t\t</Offcanvas>\r\n\t\t</>\r\n\t)\r\n}\r\n/*\r\n{headers.map((header, index) => (\r\n\t<ActionsTable \r\n\t\tspellCardID={spellCardID}\r\n\t\tsetSpellCardID={setSpellCardID} \r\n\t\toffCanvas={true} \r\n\t\tid={props.id} \r\n\t\tkey={index} \r\n\t\theader={header} \r\n\t\tsearchField={searchField} \r\n\t\tfilters={filters} \r\n\t\tbodies={sortedSpellList.filter((action) => {return action.type === header})} \r\n\t\tspells=\"true\"\r\n\t/>\r\n))}\r\n*/\r\n\r\nexport const FilterItem = (props) => {\r\n\treturn (\r\n\t\t<div className=\"filter-body\">\r\n\t\t\t{props.name} <AiOutlineCloseCircle type=\"button\" color=\"black\" size=\"20\" id=\"delete-button\" \r\n\t\t\t\t\t\t\tonClick={(event) => props.handleDelete(event, props.index, props.type)} className=\"filter-delete-button\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst FilterSelection = (props) => {\r\n\tconst dispatch = useDispatch()\r\n\tlet defaultValue = \"\"\r\n\tconst handleAdd = (event, type) => {\r\n\t\tif(type === \"search\") {\r\n\t\t\tprops.setSearchField(event.target.value)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdefaultValue = event.target.value\r\n\t\t}\r\n\t\tlet copy = structuredClone(props.filters)\r\n\t\tlet search = \"\"\r\n\t\tif(type != \"search\") {\r\n\t\t\tcopy[type].push(event.target.value)\r\n\t\t\tprops.setFilters(copy)\r\n\t\t}\r\n\t\telse if(type === \"search\") {\r\n\t\t\tsearch = event.target.value\r\n\t\t}\r\n\t\tdispatch(filterSpells([copy, search]))\r\n\t}\r\n\tconst slotList = [\"Cantrip\",\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\"]\r\n\tconst classList = [\"Bard\", \"Cleric\", \"Druid\", \"Paladin\", \"Ranger\", \"Sorcerer\", \"Warlock\", \"Wizard\"]\r\n\tconst schoolList = [\"Abjuration\", \"Conjuration\", \"Divination\", \"Enchantment\",\"Evocation\", \"Illusion\", \"Necromancy\", \"Transmutation\"]\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form.Control placeholder=\"Search\" type=\"search\" onChange={(e) => (handleAdd(e, \"search\"))}></Form.Control>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Form.Select value={defaultValue} aria-label=\"Choose spell school\" onChange={(e) => (handleAdd(e, \"schools\"))}>\r\n\t\t\t\t\t<option value=\"\">Filter schools</option>\r\n\t\t\t\t\t{schoolList.map((class1, index) => (\r\n\t\t\t\t\t\tprops.filters.schools.filter(item => item === class1).length === 0 ? <option key={`filter-option-school-${class1}`} value={class1}>{class1}</option> : \"\"\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Form.Select>\r\n\t\t\t\t<Form.Select value={defaultValue} aria-label=\"Choose class\" onChange={(e) => (handleAdd(e, \"classes\"))}>\r\n\t\t\t\t\t<option value=\"\">Filter classes</option>\r\n\t\t\t\t\t{classList.map((class1, index) => (\r\n\t\t\t\t\t\tprops.filters.classes.filter(item => item === class1).length === 0 ? <option key={`filter-option-class-${class1}`} value={class1}>{class1}</option> : \"\"\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Form.Select>\r\n\t\t\t</InputGroup>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Form.Select value={defaultValue} aria-label=\"Choose spell slot\" onChange={(e) => ( handleAdd(e, \"spellslots\"))}>\r\n\t\t\t\t\t<option value=\"\">Filter spell tier</option>\r\n\t\t\t\t\t{slotList.map((slot, index) => (\r\n\t\t\t\t\t\tprops.filters.spellslots.filter(item => item === slot).length === 0 ? <option key={`filter-option-level-${slot}`} value={slot}>{slot}</option> : \"\"\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Form.Select>\r\n\t\t\t\t<Form.Select value={defaultValue} aria-label=\"Is spell Ritual\" onChange={(e) => (handleAdd(e, \"ritual\"))}>\r\n\t\t\t\t\t<option value=\"\"> Is spell ritual? </option>\r\n\t\t\t\t\t{props.filters.ritual.filter(is => is === \"ritual\").length === 0 ? <option value=\"ritual\" > Is ritual spell </option> : \"\" }\r\n\t\t\t\t\t{props.filters.ritual.filter(is => is === \"not ritual\").length === 0 ? <option value=\"not ritual\"> Is not ritual spell</option> : \"\" }\r\n\t\t\t\t</Form.Select>\r\n\t\t\t</InputGroup>\r\n\t\t</>\r\n\t)\r\n}","import React, { useState, useRef} from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nimport { ActionsTable } from \"./ActionsTable\"\r\nimport { addAction, editAction } from './ActionsSlice';\r\nimport { ActionsAdd } from './ActionsAdd';\r\nimport { SpellList } from './SpellList';\r\nimport { useFocus } from '../../components/CustomHooks';\r\n\r\nconst _ = require('lodash')\r\n\r\nexport default function ActionsBox(props) {\r\n\tconst dispatch = useDispatch()\r\n\tlet actionTemplate = props.id === \"Spells\" ? \r\n\t\t{\r\n\t\t\tshowCard:false,\r\n\t\t\tfiltered:true, \r\n\t\t\tid: \"\", \r\n\t\t\tname: \"\", \r\n\t\t\trange: \"\", \r\n\t\t\tdamage: \"\", \r\n\t\t\tdamageAtHigherLevel: \"None\",\r\n\t\t\ttype: \"\", \r\n\t\t\tscaling: \"\", \r\n\t\t\tisPrepared: false, \r\n\t\t\tdamageType: \"\", \r\n\t\t\tdescription: [\"\",\"\"], \r\n\t\t\tschool: \"\", \r\n\t\t\tritual: \"\", \r\n\t\t\tclasses: \"\", \r\n\t\t\tcomponents: \"\",\r\n\t\t\tduration: [\"\",\"\"], \r\n\t\t\tcastingTime: \"\"\r\n\t\t} : \r\n\t\t{\r\n\t\t\tid: \"\", \r\n\t\t\tname: \"\", \r\n\t\t\trange: \"\", \r\n\t\t\tdamage: \"\", \r\n\t\t\ttype: \"\", \r\n\t\t\tscaling: \"\", \r\n\t\t\tisProficient: \"\", \r\n\t\t\tdamageType: \"\", \r\n\t\t\tdescription: \"\"\r\n\t\t}\r\n\tconst actions = useSelector(state => state.actions.actions)\r\n\tconst sortedSpellList = useSelector(state => state.actions.sortedSpellList)\r\n\r\n\tconst [showSpellList, setShowSpellList] = useState(false)\r\n\tconst [showAddAction, setShowAddAction] = useState(false)\r\n\tconst [showQuickAddAction, setShowQuickAddAction] = useState(false)\r\n\tconst [defaultValues, setDefaultValues] = useState(actionTemplate)\r\n\tconst [oldData, setOldData] = useState({})\r\n\tconst [editing, setEditing] = useState(false)\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [cardID, setCardID] = useState(\"0\")\r\n\tconst [inputRef, setInputFocus] = useFocus()\r\n\r\n\t//could maybe be more efficient?\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tlet data = defaultValues\r\n\t\tlet sameName = false\r\n\t\tif(editing) {\r\n\t\t\tif (!_.isEqual(data, oldData)) {\r\n\t\t\t\tdata.id = oldData.id\r\n\t\t\t\tdispatch(editAction(data, props.id, oldData.name))\r\n\t\t\t\tsetEditing(false)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetEditing(false)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(actions.filter(action => {return action.name === event.target[0].value}).length != 0 || sortedSpellList.filter(action => {return action.name === event.target[0].value}).length != 0) {\r\n\t\t\t\tevent.stopPropagation()\r\n\t\t\t\tsetShow(true)\r\n\t\t\t\tsetInputFocus()\r\n\t\t\t\tsameName = true\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch(addAction(data, props.id))\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!sameName) {\r\n\t\t\tsetDefaultValues(actionTemplate)\r\n\t\t\tsetShow(false)\r\n\t\t\tsetShowAddAction(false)\r\n\t\t}\r\n\t}\r\n\tconst handleSelectValues = (event, id) => {\r\n\t\tlet copy = structuredClone(defaultValues)\r\n\t\tif(event.target != undefined) {\r\n\t\t\tcopy[id] = event.target.value\r\n\t\t}\r\n\t\tif(id === \"damage\") {\r\n\t\t\tcopy[id] = event\r\n\t\t}\r\n\t\tif(id === \"description_0\") {\r\n\t\t\tcopy.description = [event.target.value, copy.description[1]]\r\n\t\t}\r\n\t\telse if(id === \"description_1\") {\r\n\t\t\tcopy.description = [copy.description[0], event.target.value]\r\n\t\t}\r\n\t\telse if(id === \"duration_0\") {\r\n\t\t\tcopy.duration = [event.target.value, copy.duration[1]]\r\n\t\t}\r\n\t\telse if(id === \"duration_1\") {\r\n\t\t\tcopy.duration = [copy.duration[0], event.target.value]\r\n\t\t}\r\n\t\tsetDefaultValues(copy)\r\n\t}\r\n\t//<FloatingLabel label=\"Name\" style={{color:\"black\"}}>\r\n\treturn (\r\n\t\t<Card className=\"main-element-sub-card\" id=\"ActionsPart\">\r\n\t\t\t{props.headers.map((header, index) => (\r\n\t\t\t\t<ActionsTable \r\n\t\t\t\t\tcardID={cardID}\r\n\t\t\t\t\tsetCardID={setCardID}\r\n\t\t\t\t\tsetOldData={setOldData} \r\n\t\t\t\t\tsetEditing={setEditing}\r\n\t\t\t\t\tsetShowQuickAddAction={setShowQuickAddAction}\r\n\t\t\t\t\tsetDefaultValues={setDefaultValues} \r\n\t\t\t\t\toffCanvas={props.offCanvas} \r\n\t\t\t\t\tid={props.id} \r\n\t\t\t\t\tkey={`actions-table-${header}`} \r\n\t\t\t\t\theader={header} \r\n\t\t\t\t\tbodies={props.actions.filter((action) => {return action.type === header})} \r\n\t\t\t\t\tspells={props.spells}\r\n\t\t\t\t\tinputRef={inputRef}\r\n\t\t\t\t\tsetInputFocus={setInputFocus}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t<ButtonGroup>\r\n\t\t\t\t<Button onClick={(event) => (setShowAddAction(!showAddAction))}>Add {props.id === \"Spells\" ? \"Spell\" : \"Action\"}</Button>\r\n\t\t\t\t<Button onClick={(event) => (setShowQuickAddAction(!showQuickAddAction))}>Quick Add {props.id === \"Spells\" ? \"Spell\" : \"Action\"}</Button>\r\n\t\t\t\t{props.id === \"Spells\" ? <Button onClick={(event) => (setShowSpellList(!showSpellList))}>Browse Spell List</Button> : null}\r\n\t\t\t</ButtonGroup>\r\n\t\t\t{props.id === \"Spells\" ? <SpellList inheritShow={showSpellList} setInheritShow={setShowSpellList} /> : \"\" }\r\n\t\t\t<ActionsAdd \r\n\t\t\t\tshow={show} \r\n\t\t\t\tediting={editing} \r\n\t\t\t\tsetEditing={setEditing} \r\n\t\t\t\tdefaultValues={defaultValues} \r\n\t\t\t\tsetDefaultValues={setDefaultValues} \r\n\t\t\t\tinputRef={inputRef} \r\n\t\t\t\tspells={props.spells} \r\n\t\t\t\tactionTemplate={actionTemplate} \r\n\t\t\t\thandleSubmit={handleSubmit} \r\n\t\t\t\thandleSelectValues={handleSelectValues} \r\n\t\t\t\toptions={props.options}\r\n\r\n\t\t\t\tshowAddAction={showAddAction}\r\n\t\t\t\tsetShowAddAction={setShowAddAction}\r\n\t\t\t\tshowQuickAddAction={showQuickAddAction}\r\n\t\t\t\tsetShowQuickAddAction={setShowQuickAddAction}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t)\r\n}","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","import * as React from 'react';\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n/**\n * Sets a ref using either a ref callback or a ref object\n */\n\nexport var setRef = function setRef(ref, node) {\n  // if its a function call it\n  if (typeof ref === 'function') {\n    return safeInvoke(ref, node);\n  } // otherwise we should treat it as a ref object\n  else if (ref != null) {\n      ref.current = node;\n    }\n};\n/**\n * Simple ponyfill for Object.fromEntries\n */\n\nexport var fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\n\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createPopper as defaultCreatePopper } from '@popperjs/core';\nimport isEqual from 'react-fast-compare';\nimport { fromEntries, useIsomorphicLayoutEffect } from './utils';\nvar EMPTY_MODIFIERS = [];\nexport var usePopper = function usePopper(referenceElement, popperElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var prevOptions = React.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  var _React$useState = React.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      }\n    },\n    attributes: {}\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var updateStateModifier = React.useMemo(function () {\n    return {\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      fn: function fn(_ref) {\n        var state = _ref.state;\n        var elements = Object.keys(state.elements);\n        ReactDOM.flushSync(function () {\n          setState({\n            styles: fromEntries(elements.map(function (element) {\n              return [element, state.styles[element] || {}];\n            })),\n            attributes: fromEntries(elements.map(function (element) {\n              return [element, state.attributes[element]];\n            }))\n          });\n        });\n      },\n      requires: ['computeStyles']\n    };\n  }, []);\n  var popperOptions = React.useMemo(function () {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {\n        name: 'applyStyles',\n        enabled: false\n      }])\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = React.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(function () {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || defaultCreatePopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return function () {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};"],"names":["SpellCard","props","data","undefined","name","range","type","description","school","ritual","classes","components","duration","castingTime","i","length","className","show","offCanvas","Row","Col","md","map","desc","index","style","paddingRight","textAlign","id","ActionCard","damage","damageType","scaling","isProficient","Card","DiceRollButton","spellBonus","singleValue","noOptions","options","bonus","parseInt","testNoDice","toString","includes","hasDice","useMemo","value","options1","forEach","option","push","label","replace","useState","defaultValue","setDefaultValue","checkValueType","splitValue","split","rollFunction","rolls","result","resultVariable","rollsVariable","Math","floor","random","console","log","handleRollClick","event","preventDefault","stopPropagation","splitMain","splitExtra","splitMainValue","splitMainType","mainRoll","splitExtraValue","splitExtraType","extraRoll","passData","showMenu","setShowMenu","handleBlur","dropdownEl","document","getElementById","menuEl","targetEl","target","parentNode","handleMenuItemClick","useEffect","addEventListener","removeEventListener","dropdownStyle","Button","variant","rollButtonStyle","onClick","noDiceValueStyle","Dropdown","onBlur","toggleButtonStyle","menuStyle","itemStyle","as","ActionsTable","dispatch","useDispatch","currentBody","setCurrentBody","charAttributes","useSelector","state","attributes","spellCastingAttribute","casting","spellAttribute","proficiency","charLevel","charDetails","scalingBonus","scale","filter","charAttribute","handlePrepared","checked","setPrepared","place","cardID","showDetails","setShowDetails","showPopover","setShowPopover","referenceElement","setReferenceElement","popperElement","arrowElement","usePopper","placement","modifiers","element","offset","convertTemplate","styles","damageAtHigherLevel","keys","object","Object","key","handleRoll","addRoll","marginLeft","marginRight","header","spells","Table","size","color","border","bodies","body","filtered","test","find","setCardID","handleRowClick","height","width","zIndex","defaultChecked","isPrepared","display","flexWrap","noDice","paddingLeft","justifyItems","setDefaultValues","setOldData","setEditing","setShowQuickAddAction","setInputFocus","inputRef","current","scrollIntoView","startEdit","deleteAction","handleDelete","borderRight","borderLeft","colSpan","ActionsAdd","editing","defaultValues","actionTemplate","handleSubmit","handleSelectValues","inputNameRef","useFocus","inputDamageRef","setInputDamageFocus","showDamageTooltip","setShowDamageTooltip","damageTest","setDamageTest","ariaLabel","attributesList","schoolList","damageTypeList","componentsList","checkIfDice","stringToCheck","isDice","firstPart","isNaN","secondPart","damageValidation","expressionOne","expressionTwo","preValidate","addActionForm","modal","Form","onSubmit","Modal","InputGroup","FloatingLabel","controlId","ref","required","placeholder","onChange","Overlay","flip","Tooltip","opacity","handleDamageChange","option1","component","setShowAddAction","showQuickAddAction","flexGrow","backdrop","contentClassName","showAddAction","onHide","closeButton","SpellList","inheritShow","setInheritShow","sortedSpellList","actions","setShow","spellCardID","setSpellCardID","handleClose","filterSpells","spellslots","schools","filters","setFilters","searchField","setSearchField","filterKeys","copy","structuredClone","slice","concat","Offcanvas","backgroundColor","marginTop","scroll","FilterSelection","Container","fluid","FilterItem","action","handleAdd","search","e","class1","item","slot","is","_","require","ActionsBox","showCard","showSpellList","setShowSpellList","oldData","headers","ButtonGroup","sameName","isEqual","editAction","addAction","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","a","b","constructor","it","Array","isArray","entries","next","done","has","get","RegExp","source","flags","valueOf","prototype","hasOwnProperty","call","$$typeof","module","exports","error","message","match","warn","enabled","phase","fn","_ref","elements","isHTMLElement","getNodeName","assign","removeAttribute","setAttribute","effect","_ref2","initialStyles","popper","position","strategy","left","top","margin","arrow","reference","reduce","property","attribute","requires","defaultModifiers","eventListeners","popperOffsets","computeStyles","applyStyles","preventOverflow","hide","createPopper","popperGenerator","fromEntries","acc","useIsomorphicLayoutEffect","window","createElement","React","EMPTY_MODIFIERS","prevOptions","optionsWithDefaults","onFirstUpdate","_React$useState","setState","updateStateModifier","ReactDOM","popperOptions","newOptions","popperInstanceRef","setOptions","popperInstance","defaultCreatePopper","destroy","update","forceUpdate"],"sourceRoot":""}